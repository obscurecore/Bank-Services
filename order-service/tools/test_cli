#!/bin/bash
#additional option inside scenario
set -euf -o pipefail
D=$(dirname $BASH_SOURCE)
source $D/.functions
trap "handle_exit" EXIT


COMMAND="${1: }"

mongo_kill() {
    docker run --rm --net=host --name=mongo_client -it -v  `pwd`/tools/env:/script mongo:latest mongo localhost:27020/cards /script/killop.js
}

_infra_status() {
  $D/.resolve_dev_middleware_ports.sh
}

case "$COMMAND" in
  env)
    _yellow start docker env
    docker-compose -f $D/env/docker-compose.yml up -d
    _infra_status
    ;;
  env_start)
    _yellow start docker env
    docker-compose -f $D/env/docker-compose.yml start
    _infra_status
    ;;
  env_down)
    _yellow down docker env
    docker-compose -f $D/env/docker-compose.yml down
    docker ps
    ;;
  env_stop)
    _yellow stop docker env
    docker-compose -f $D/env/docker-compose.yml stop
    docker ps
    ;;
  env_restart)
    _yellow stop docker env
    docker-compose -f $D/env/docker-compose.yml restart
    docker ps
    ;;
  *)
    echo "use command [env|env_stop|env_restart|env_down|mongo_fill]"
    no_status
    _done
  ;;
esac

